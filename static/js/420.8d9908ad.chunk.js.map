{"version":3,"file":"static/js/420.8d9908ad.chunk.js","mappings":"0MAaA,MAaA,GAbaA,EAAAA,EAAAA,aAAkC,CAAC,EAA0CC,KAA3C,IAAC,SAAEC,EAAF,MAAYC,EAAQ,GAApB,KAAwBC,KAASC,GAAlC,SAC7C,iCACE,UAAC,KAAD,YACE,2BAAS,GAAEF,sBACVC,MAGH,SAAC,IAAD,CAAKH,IAAKA,KAASI,EAAnB,SACGH,W,6HCRWI,EAAAA,EAAAA,IAAO,MAAPA,EAAc,QAAC,MAAEC,GAAH,QAAgB,CAC9CC,MAAO,IACPC,OAAQ,IACRC,OAAQ,OACRC,aAAc,MACdC,QAASL,EAAMM,QAAQ,GACvBC,OAAS,cAAaP,EAAMQ,QAAQC,KAAK,cAGrBV,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CAClCW,OAAQ,EACRT,MAAO,OACPC,OAAQ,OACRS,QAAS,OACTC,QAAS,OACTC,SAAU,SACVT,aAAc,MACdU,SAAU,WACVC,WAAY,SACZC,eAAgB,SAChB,QAAS,CAAEf,MAAO,OAAQC,OAAQ,QAClC,UAAW,CACTe,OAAQ,UACR,iBAAkB,CAChBP,OAAQ,OAKWX,EAAAA,EAAAA,IAAO,MAAPA,EAAc,QAAC,MAAEC,GAAH,QAAgB,CACrDY,QAAS,OACTE,SAAU,WACVC,WAAY,SACZG,cAAe,SACfF,eAAgB,SAChBG,MAAOnB,EAAMQ,QAAQY,KAAKC,UAC1BC,gBAAiBtB,EAAMQ,QAAQe,WAAWC,QAC1CC,WAAYzB,EAAM0B,YAAYC,OAAO,UAAW,CAC9CC,OAAQ5B,EAAM0B,YAAYE,OAAOC,UACjCC,SAAU9B,EAAM0B,YAAYI,SAASC,UAEvC,UAAW,CAAEC,QAAS,UCzCFjC,EAAAA,EAAAA,IAAO,MAAPA,EAAc,QAAC,MAAEC,GAAH,QAAgB,CAClDW,QAAS,OACTN,QAASL,EAAMM,QAAQ,EAAG,GAC1BF,aAAcJ,EAAMiC,MAAM7B,aAC1BkB,gBAAiBtB,EAAMQ,QAAQe,WAAWC,QAC1CjB,OAAS,cAAaP,EAAMQ,QAAQC,KAAK,SACzC,UAAW,CAAEuB,QAAS,IAAMf,OAAQ,gBCNhBlB,EAAAA,EAAAA,IAAO,MAAPA,EAAc,QAAC,MAAEC,GAAH,QAAgB,CAClDW,QAAS,OACTE,SAAU,SACVC,SAAU,WACVT,QAASL,EAAMM,QAAQ,EAAG,GAC1BF,aAAcJ,EAAMiC,MAAM7B,aAC1BqB,WAAYzB,EAAM0B,YAAYC,OAAO,WACrCL,gBAAiBtB,EAAMQ,QAAQe,WAAWC,QAC1CjB,OAAS,cAAaP,EAAMQ,QAAQC,KAAK,SACzC,UAAW,CAAEuB,QAAS,IAAMf,OAAQ,e,eCVvB,SAASiB,EAAT,GAA+D,IAAzC,SAAEvC,EAAF,SAAYwC,EAAZ,QAAsBC,GAAkB,EAC3E,OACE,SAAC,KAAD,IAAUA,EAAV,UACE,iBAAMD,SAAUA,EAAhB,SAA2BxC,M,yBCFlB,SAAS0C,EAAT,GAA+C,IAA5B,KAAEC,KAASxC,GAAgB,EAC3D,MAAM,QAAEyC,IAAYC,EAAAA,EAAAA,MAEpB,OACE,SAAC,IAAD,CACED,SACE,SAAC,KAAD,CACED,KAAMA,EACNC,QAASA,EACTE,OAAQ,QAAC,MAAEC,GAAH,SAAe,SAACC,EAAA,EAAD,IAAYD,EAAOE,QAASF,EAAMG,cAGzD/C,I,2BCrBiBC,EAAAA,EAAAA,IAAO,MAAPA,EAAc,IAAgB,IAAf,MAAEC,GAAY,EACtD,MAAM8C,EAA4B,QAApB9C,EAAM+C,UAEpB,MAAO,CACL,iiDACE,CACEC,KAAMhD,EAAMQ,QAAQyC,QAAQC,MAEhC,8kBACE,CACE/B,MAAOnB,EAAMQ,QAAQyC,QAAQC,MAEjC,iiDACE,CACEC,OAAQnD,EAAMQ,QAAQyC,QAAQC,MAElC,eAAgB,CACdC,OAAQnD,EAAMQ,QAAQY,KAAK6B,SAE7B,iCAAkC,CAChCD,KAAMhD,EAAMQ,QAAQY,KAAK6B,SAE3B,8EAA+E,CAC7E,UAAW,CAAEtC,QAAS,SAExB,wBAAyB,CACvBJ,OAAQ,OACR6C,aAAe,aAAYpD,EAAMQ,QAAQC,KAAK,SAC9C,gBAAiB,CACf,uBAAwB,CACtB4C,YAAarD,EAAMM,QAAQ,KAK/B,WAAY,CACVD,QAAS,EACTO,QAAS,OACTG,WAAY,SACZC,eAAgB,SAChBZ,aAAc,EACde,MAAOnB,EAAMQ,QAAQY,KAAK6B,SAI5B,yBAA0B,CACxBhD,MAAO,GACPC,OAAQ,IAIV,qBAAsB,IACjBF,EAAMsD,WAAWC,UACpBpC,MAAOnB,EAAMQ,QAAQY,KAAK6B,QAC1B,eAAgB,CACdE,OAAQnD,EAAMQ,QAAQY,KAAK6B,UAG/B,yBAA0B,IACpBH,GAAS,CACXU,MAAO,eACPC,KAAM,oBAGV,4CAA6C,CAC3C,qBAAsB,CACpBpD,QAAS,EACTO,QAAS,OACTG,WAAY,SACZC,eAAgB,WAGpB,iBAAkB,CAChB,qBAAsB,CACpBZ,aAAc,EACde,MAAOnB,EAAMQ,QAAQY,KAAKsC,SAC1BC,YAAa,yBACbrC,gBAAiBtB,EAAMQ,QAAQoD,OAAOC,MACtC,eAAgB,CAAEV,OAAQnD,EAAMQ,QAAQY,KAAKsC,WAE/C,uBAAwB,CACtBrD,QAAS,EACTyD,UAAW,EACXvD,OAAQ,OACRwD,UAAW,IACXlD,SAAU,OACVmD,UAAWhE,EAAMiE,cAAcC,IAC/B9D,aAAcJ,EAAMiC,MAAM7B,aAC1BkB,gBAAiBtB,EAAMQ,QAAQe,WAAW4C,OAE5C,oBAAqB,CACnBhD,MAAOnB,EAAMQ,QAAQY,KAAK6B,SAI5B,aAAc,CACZ,uBAAwB,CAAE5C,QAAS,EAAGO,QAAS,QAC/C,oBAAqB,CACnBX,MAAO,GACPC,OAAQ,GACRU,QAAS,OACTG,WAAY,SACZC,eAAgB,WAIpB,8BAA+B,CAC7B,uBAAwB,CAAEX,QAAS,GACnC,oBAAqB,CACnBF,OAAQ,EACRC,aAAc,EACd,gBAAiB,CAAEG,OAAQ,qBAI/B,oCAAqC,CACnC,uBAAwB,CACtBF,QAASL,EAAMM,QAAQ,EAAG,IAE5B,oBAAqB,CACnBD,QAASL,EAAMM,QAAQ,GAAK,aAxHxC,MCIM8D,EAAc,CAAC,QAAS,SAAU,UAAW,SAAU,WAEvDC,EAAY,CAChB,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QAaF,MAAMC,EAAOC,EAAAA,MAAAA,OAAa,0BAC1BD,EAAKE,UAAYH,EACjBE,EAAAA,MAAAA,SAAeD,GAAM,GAErB,MAAMG,EAAOF,EAAAA,MAAAA,OAAa,0BAC1BE,EAAKD,UAAYJ,EACjBG,EAAAA,MAAAA,SAAeE,GAAM,ICjCH1E,EAAAA,EAAAA,IAAO2E,EAAAA,EAAP3E,EAAY,QAAC,MAAEC,GAAH,QAAgB,CAC5CI,aAAcJ,EAAMiC,MAAM7B,aAC1BG,OAAS,aAAYP,EAAMQ,QAAQC,KAAK,SACxC,0BAA2B,CACzBkD,YAAa,iBACV3D,EAAMsD,WAAWqB,MACpBC,WAAY5E,EAAMsD,WAAWsB,YAE/B,eAAgB,CACdC,UAAW,IACXd,UAAW,IACX,qBAAsB,CACpBe,UAAW,SACX3D,MAAOnB,EAAMQ,QAAQY,KAAKsC,UAE5B,kBAAmB,IACd1D,EAAMsD,WAAWyB,MACpB1E,QAASL,EAAMM,QAAQ,GACvBF,aAAcJ,EAAMiC,MAAM7B,aAC1BkB,gBAAiBtB,EAAMQ,QAAQC,KAAK,W,eChB3B,SAASuE,EAAT,GAAkD,IAA5B,KAAE1C,KAASxC,GAAgB,EAC9D,MAAM,QAAEyC,IAAYC,EAAAA,EAAAA,MAEpB,OACE,SAAC,KAAD,CACEF,KAAMA,EACNC,QAASA,EACTE,OAAQ,QAAC,MAAEC,EAAOuC,YAAY,MAAEC,IAAxB,SACN,SAAC,IAAD,IAAexC,EAAOyC,WAAS,EAACD,QAASA,EAAOE,WAAU,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAOG,WAAavF,S","sources":["components/Page.tsx","components/upload/UploadAvatar.tsx","components/upload/UploadMultiFile.tsx","components/upload/UploadSingleFile.tsx","components/hook-form/FormProvider.tsx","components/hook-form/RHFSwitch.tsx","components/editor/EditorToolbarStyle.tsx","components/editor/EditorToolbar.tsx","components/editor/index.tsx","components/hook-form/RHFTextField.tsx"],"sourcesContent":["import { Helmet } from 'react-helmet-async';\nimport { forwardRef, ReactNode } from 'react';\n// @mui\nimport { Box, BoxProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends BoxProps {\n  children: ReactNode;\n  meta?: ReactNode;\n  title: string;\n}\n\nconst Page = forwardRef<HTMLDivElement, Props>(({ children, title = '', meta, ...other }, ref) => (\n  <>\n    <Helmet>\n      <title>{`${title} | UniversalDot.`}</title>\n      {meta}\n    </Helmet>\n\n    <Box ref={ref} {...other}>\n      {children}\n    </Box>\n  </>\n));\n\nexport default Page;\n","import { useDropzone } from 'react-dropzone';\n// @mui\nimport { Typography } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n// type\nimport { UploadProps } from './type';\n//\nimport Image from '../Image';\nimport Iconify from '../Iconify';\nimport RejectionFiles from './RejectionFiles';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  width: 144,\n  height: 144,\n  margin: 'auto',\n  borderRadius: '50%',\n  padding: theme.spacing(1),\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n}));\n\nconst DropZoneStyle = styled('div')({\n  zIndex: 0,\n  width: '100%',\n  height: '100%',\n  outline: 'none',\n  display: 'flex',\n  overflow: 'hidden',\n  borderRadius: '50%',\n  position: 'relative',\n  alignItems: 'center',\n  justifyContent: 'center',\n  '& > *': { width: '100%', height: '100%' },\n  '&:hover': {\n    cursor: 'pointer',\n    '& .placeholder': {\n      zIndex: 9,\n    },\n  },\n});\n\nconst PlaceholderStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  position: 'absolute',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  color: theme.palette.text.secondary,\n  backgroundColor: theme.palette.background.neutral,\n  transition: theme.transitions.create('opacity', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n  '&:hover': { opacity: 0.72 },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function UploadAvatar({ error, file, helperText, sx, ...other }: UploadProps) {\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    multiple: false,\n    ...other,\n  });\n\n  return (\n    <>\n      <RootStyle\n        sx={{\n          ...((isDragReject || error) && {\n            borderColor: 'error.light',\n          }),\n          ...sx,\n        }}\n      >\n        <DropZoneStyle\n          {...getRootProps()}\n          sx={{\n            ...(isDragActive && { opacity: 0.72 }),\n          }}\n        >\n          <input {...getInputProps()} />\n\n          {file && (\n            <Image\n              alt=\"avatar\"\n              src={typeof file === 'string' ? file : file.preview}\n              sx={{ zIndex: 8 }}\n            />\n          )}\n\n          <PlaceholderStyle\n            className=\"placeholder\"\n            sx={{\n              ...(file && {\n                opacity: 0,\n                color: 'common.white',\n                bgcolor: 'grey.900',\n                '&:hover': { opacity: 0.72 },\n              }),\n              ...((isDragReject || error) && {\n                bgcolor: 'error.lighter',\n              }),\n            }}\n          >\n            <Iconify icon={'ic:round-add-a-photo'} sx={{ width: 24, height: 24, mb: 1 }} />\n            <Typography variant=\"caption\">{file ? 'Update photo' : 'Upload photo'}</Typography>\n          </PlaceholderStyle>\n        </DropZoneStyle>\n      </RootStyle>\n\n      {helperText && helperText}\n\n      {fileRejections.length > 0 && <RejectionFiles fileRejections={fileRejections} />}\n    </>\n  );\n}\n","import { useDropzone } from 'react-dropzone';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Stack, Button } from '@mui/material';\n// type\nimport { UploadMultiFileProps } from './type';\n//\nimport BlockContent from './BlockContent';\nimport RejectionFiles from './RejectionFiles';\nimport MultiFilePreview from './MultiFilePreview';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  outline: 'none',\n  padding: theme.spacing(5, 1),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.background.neutral,\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n  '&:hover': { opacity: 0.72, cursor: 'pointer' },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function UploadMultiFile({\n  error,\n  showPreview = false,\n  files,\n  onUpload,\n  onRemove,\n  onRemoveAll,\n  helperText,\n  sx,\n  ...other\n}: UploadMultiFileProps) {\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    ...other,\n  });\n\n  return (\n    <Box sx={{ width: '100%', ...sx }}>\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n          ...((isDragReject || error) && {\n            color: 'error.main',\n            borderColor: 'error.light',\n            bgcolor: 'error.lighter',\n          }),\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <BlockContent />\n      </DropZoneStyle>\n\n      {fileRejections.length > 0 && <RejectionFiles fileRejections={fileRejections} />}\n\n      <MultiFilePreview files={files} showPreview={showPreview} onRemove={onRemove} />\n\n      {files.length > 0 && (\n        <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={1.5}>\n          <Button color=\"inherit\" size=\"small\" onClick={onRemoveAll}>\n            Remove all\n          </Button>\n          <Button size=\"small\" variant=\"contained\" onClick={onUpload}>\n            Upload files\n          </Button>\n        </Stack>\n      )}\n\n      {helperText && helperText}\n    </Box>\n  );\n}\n","import { useDropzone } from 'react-dropzone';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n// type\nimport { UploadProps } from './type';\n//\nimport Image from '../Image';\nimport RejectionFiles from './RejectionFiles';\nimport BlockContent from './BlockContent';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  outline: 'none',\n  overflow: 'hidden',\n  position: 'relative',\n  padding: theme.spacing(5, 1),\n  borderRadius: theme.shape.borderRadius,\n  transition: theme.transitions.create('padding'),\n  backgroundColor: theme.palette.background.neutral,\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n  '&:hover': { opacity: 0.72, cursor: 'pointer' },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function UploadSingleFile({\n  error = false,\n  file,\n  helperText,\n  sx,\n  ...other\n}: UploadProps) {\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    multiple: false,\n    ...other,\n  });\n\n  return (\n    <Box sx={{ width: '100%', ...sx }}>\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n          ...((isDragReject || error) && {\n            color: 'error.main',\n            borderColor: 'error.light',\n            bgcolor: 'error.lighter',\n          }),\n          ...(file && {\n            padding: '12% 0',\n          }),\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <BlockContent />\n\n        {file && (\n          <Image\n            alt=\"file preview\"\n            src={typeof file === 'string' ? file : file.preview}\n            sx={{\n              top: 8,\n              left: 8,\n              borderRadius: 1,\n              position: 'absolute',\n              width: 'calc(100% - 16px)',\n              height: 'calc(100% - 16px)',\n            }}\n          />\n        )}\n      </DropZoneStyle>\n\n      {fileRejections.length > 0 && <RejectionFiles fileRejections={fileRejections} />}\n\n      {helperText && helperText}\n    </Box>\n  );\n}\n","import { ReactNode } from 'react';\n// form\nimport { FormProvider as Form, UseFormReturn } from 'react-hook-form';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  children: ReactNode;\n  methods: UseFormReturn<any>;\n  onSubmit?: VoidFunction;\n};\n\nexport default function FormProvider({ children, onSubmit, methods }: Props) {\n  return (\n    <Form {...methods}>\n      <form onSubmit={onSubmit}>{children}</form>\n    </Form>\n  );\n}\n","// form\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { Switch, FormControlLabel, FormControlLabelProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ntype IProps = Omit<FormControlLabelProps, 'control'>;\n\ninterface Props extends IProps {\n  name: string;\n}\n\nexport default function RHFSwitch({ name, ...other }: Props) {\n  const { control } = useFormContext();\n\n  return (\n    <FormControlLabel\n      control={\n        <Controller\n          name={name}\n          control={control}\n          render={({ field }) => <Switch {...field} checked={field.value} />}\n        />\n      }\n      {...other}\n    />\n  );\n}\n","import { styled } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\nconst EditorToolbarStyle = styled('div')(({ theme }) => {\n  const isRTL = theme.direction === 'rtl';\n\n  return {\n    '& .ql-snow.ql-toolbar button:hover .ql-fill, .ql-snow .ql-toolbar button:hover .ql-fill, .ql-snow.ql-toolbar button:focus .ql-fill, .ql-snow .ql-toolbar button:focus .ql-fill, .ql-snow.ql-toolbar button.ql-active .ql-fill, .ql-snow .ql-toolbar button.ql-active .ql-fill, .ql-snow.ql-toolbar .ql-picker-label:hover .ql-fill, .ql-snow .ql-toolbar .ql-picker-label:hover .ql-fill, .ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-fill, .ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-fill, .ql-snow.ql-toolbar .ql-picker-item:hover .ql-fill, .ql-snow .ql-toolbar .ql-picker-item:hover .ql-fill, .ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-fill, .ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-fill, .ql-snow.ql-toolbar button:hover .ql-stroke.ql-fill, .ql-snow .ql-toolbar button:hover .ql-stroke.ql-fill, .ql-snow.ql-toolbar button:focus .ql-stroke.ql-fill, .ql-snow .ql-toolbar button:focus .ql-stroke.ql-fill, .ql-snow.ql-toolbar button.ql-active .ql-stroke.ql-fill, .ql-snow .ql-toolbar button.ql-active .ql-stroke.ql-fill, .ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill, .ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill, .ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill, .ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill, .ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill, .ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill, .ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill, .ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill':\n      {\n        fill: theme.palette.primary.main,\n      },\n    '& .ql-snow.ql-toolbar button:hover, .ql-snow .ql-toolbar button:hover, .ql-snow.ql-toolbar button:focus, .ql-snow .ql-toolbar button:focus, .ql-snow.ql-toolbar button.ql-active, .ql-snow .ql-toolbar button.ql-active, .ql-snow.ql-toolbar .ql-picker-label:hover, .ql-snow .ql-toolbar .ql-picker-label:hover, .ql-snow.ql-toolbar .ql-picker-label.ql-active, .ql-snow .ql-toolbar .ql-picker-label.ql-active, .ql-snow.ql-toolbar .ql-picker-item:hover, .ql-snow .ql-toolbar .ql-picker-item:hover, .ql-snow.ql-toolbar .ql-picker-item.ql-selected, .ql-snow .ql-toolbar .ql-picker-item.ql-selected':\n      {\n        color: theme.palette.primary.main,\n      },\n    '& .ql-snow.ql-toolbar button:hover .ql-stroke, .ql-snow .ql-toolbar button:hover .ql-stroke, .ql-snow.ql-toolbar button:focus .ql-stroke, .ql-snow .ql-toolbar button:focus .ql-stroke, .ql-snow.ql-toolbar button.ql-active .ql-stroke, .ql-snow .ql-toolbar button.ql-active .ql-stroke, .ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke, .ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke, .ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke, .ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke, .ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke, .ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke, .ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke, .ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke, .ql-snow.ql-toolbar button:hover .ql-stroke-miter, .ql-snow .ql-toolbar button:hover .ql-stroke-miter, .ql-snow.ql-toolbar button:focus .ql-stroke-miter, .ql-snow .ql-toolbar button:focus .ql-stroke-miter, .ql-snow.ql-toolbar button.ql-active .ql-stroke-miter, .ql-snow .ql-toolbar button.ql-active .ql-stroke-miter, .ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke-miter, .ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke-miter, .ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke-miter, .ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke-miter, .ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke-miter, .ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke-miter, .ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke-miter, .ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke-miter':\n      {\n        stroke: theme.palette.primary.main,\n      },\n    '& .ql-stroke': {\n      stroke: theme.palette.text.primary,\n    },\n    '& .ql-fill, .ql-stroke.ql-fill': {\n      fill: theme.palette.text.primary,\n    },\n    '& .ql-picker, .ql-picker-options, .ql-picker-item, .ql-picker-label, button': {\n      '&:focus': { outline: 'none' },\n    },\n    '& .ql-toolbar.ql-snow': {\n      border: 'none',\n      borderBottom: `solid 1px ${theme.palette.grey[500_32]}`,\n      '& .ql-formats': {\n        '&:not(:last-of-type)': {\n          marginRight: theme.spacing(2),\n        },\n      },\n\n      // Button\n      '& button': {\n        padding: 0,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 4,\n        color: theme.palette.text.primary,\n      },\n\n      // Icon svg\n      '& button svg, span svg': {\n        width: 20,\n        height: 20,\n      },\n\n      // Select\n      '& .ql-picker-label': {\n        ...theme.typography.subtitle2,\n        color: theme.palette.text.primary,\n        '& .ql-stroke': {\n          stroke: theme.palette.text.primary,\n        },\n      },\n      '& .ql-picker-label svg': {\n        ...(isRTL && {\n          right: '0 !important',\n          left: 'auto !important',\n        }),\n      },\n      '& .ql-color,& .ql-background,& .ql-align ': {\n        '& .ql-picker-label': {\n          padding: 0,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        },\n      },\n      '& .ql-expanded': {\n        '& .ql-picker-label': {\n          borderRadius: 4,\n          color: theme.palette.text.disabled,\n          borderColor: 'transparent !important',\n          backgroundColor: theme.palette.action.focus,\n          '& .ql-stroke': { stroke: theme.palette.text.disabled },\n        },\n        '& .ql-picker-options': {\n          padding: 0,\n          marginTop: 4,\n          border: 'none',\n          maxHeight: 200,\n          overflow: 'auto',\n          boxShadow: theme.customShadows.z20,\n          borderRadius: theme.shape.borderRadius,\n          backgroundColor: theme.palette.background.paper,\n        },\n        '& .ql-picker-item': {\n          color: theme.palette.text.primary,\n        },\n\n        // Align\n        '&.ql-align': {\n          '& .ql-picker-options': { padding: 0, display: 'flex' },\n          '& .ql-picker-item': {\n            width: 32,\n            height: 32,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          },\n        },\n        // Color & Background\n        '&.ql-color, &.ql-background': {\n          '& .ql-picker-options': { padding: 8 },\n          '& .ql-picker-item': {\n            margin: 3,\n            borderRadius: 4,\n            '&.ql-selected': { border: 'solid 1px black' },\n          },\n        },\n        // Font, Size, Header\n        '&.ql-font, &.ql-size, &.ql-header': {\n          '& .ql-picker-options': {\n            padding: theme.spacing(1, 0),\n          },\n          '& .ql-picker-item': {\n            padding: theme.spacing(0.5, 1.5),\n          },\n        },\n      },\n    },\n  };\n});\n\nexport default EditorToolbarStyle;\n","import { Quill } from 'react-quill';\n// components\nimport Iconify from '../Iconify';\n//\nimport EditorToolbarStyle from './EditorToolbarStyle';\n\n// ----------------------------------------------------------------------\n\nconst FONT_FAMILY = ['Arial', 'Tahoma', 'Georgia', 'Impact', 'Verdana'];\n\nconst FONT_SIZE = [\n  '8px',\n  '9px',\n  '10px',\n  '12px',\n  '14px',\n  '16px',\n  '20px',\n  '24px',\n  '32px',\n  '42px',\n  '54px',\n  '68px',\n  '84px',\n  '98px',\n];\nconst HEADINGS = ['Heading 1', 'Heading 2', 'Heading 3', 'Heading 4', 'Heading 5', 'Heading 6'];\n\nexport function undoChange() {\n  // @ts-ignore\n  this.quill.history.undo();\n}\nexport function redoChange() {\n  // @ts-ignore\n  this.quill.history.redo();\n}\n\nconst Size = Quill.import('attributors/style/size');\nSize.whitelist = FONT_SIZE;\nQuill.register(Size, true);\n\nconst Font = Quill.import('attributors/style/font');\nFont.whitelist = FONT_FAMILY;\nQuill.register(Font, true);\n\nexport const formats = [\n  'align',\n  'background',\n  'blockquote',\n  'bold',\n  'bullet',\n  'code',\n  'code-block',\n  'color',\n  'direction',\n  'font',\n  'formula',\n  'header',\n  'image',\n  'indent',\n  'italic',\n  'link',\n  'list',\n  'script',\n  'size',\n  'strike',\n  'table',\n  'underline',\n  'video',\n];\n\ntype EditorToolbarProps = {\n  id: string;\n  isSimple?: boolean;\n};\n\nexport default function EditorToolbar({ id, isSimple, ...other }: EditorToolbarProps) {\n  return (\n    <EditorToolbarStyle {...other}>\n      <div id={id}>\n        <div className=\"ql-formats\">\n          {!isSimple && (\n            <select className=\"ql-font\" defaultValue=\"\">\n              <option value=\"\">Font</option>\n              {FONT_FAMILY.map((font) => (\n                <option key={font} value={font}>\n                  {font}\n                </option>\n              ))}\n            </select>\n          )}\n\n          {!isSimple && (\n            <select className=\"ql-size\" defaultValue=\"16px\">\n              {FONT_SIZE.map((size) => (\n                <option key={size} value={size}>\n                  {size}\n                </option>\n              ))}\n            </select>\n          )}\n\n          <select className=\"ql-header\" defaultValue=\"\">\n            {HEADINGS.map((heading, index) => (\n              <option key={heading} value={index + 1}>\n                {heading}\n              </option>\n            ))}\n            <option value=\"\">Normal</option>\n          </select>\n        </div>\n\n        <div className=\"ql-formats\">\n          <button type=\"button\" className=\"ql-bold\" />\n          <button type=\"button\" className=\"ql-italic\" />\n          <button type=\"button\" className=\"ql-underline\" />\n          <button type=\"button\" className=\"ql-strike\" />\n        </div>\n\n        {!isSimple && (\n          <div className=\"ql-formats\">\n            <select className=\"ql-color\" />\n            <select className=\"ql-background\" />\n          </div>\n        )}\n\n        <div className=\"ql-formats\">\n          <button type=\"button\" className=\"ql-list\" value=\"ordered\" />\n          <button type=\"button\" className=\"ql-list\" value=\"bullet\" />\n          {!isSimple && <button type=\"button\" className=\"ql-indent\" value=\"-1\" />}\n          {!isSimple && <button type=\"button\" className=\"ql-indent\" value=\"+1\" />}\n        </div>\n\n        {!isSimple && (\n          <div className=\"ql-formats\">\n            <button type=\"button\" className=\"ql-script\" value=\"super\" />\n            <button type=\"button\" className=\"ql-script\" value=\"sub\" />\n          </div>\n        )}\n\n        {!isSimple && (\n          <div className=\"ql-formats\">\n            <button type=\"button\" className=\"ql-code-block\" />\n            <button type=\"button\" className=\"ql-blockquote\" />\n          </div>\n        )}\n\n        <div className=\"ql-formats\">\n          <button type=\"button\" className=\"ql-direction\" value=\"rtl\" />\n          <select className=\"ql-align\" />\n        </div>\n\n        <div className=\"ql-formats\">\n          <button type=\"button\" className=\"ql-link\" />\n          <button type=\"button\" className=\"ql-image\" />\n          <button type=\"button\" className=\"ql-video\" />\n        </div>\n\n        <div className=\"ql-formats\">\n          {!isSimple && <button type=\"button\" className=\"ql-formula\" />}\n          <button type=\"button\" className=\"ql-clean\" />\n        </div>\n\n        {!isSimple && (\n          <div className=\"ql-formats\">\n            <button type=\"button\" className=\"ql-undo\">\n              <Iconify icon={'ic:round-undo'} width={18} height={18} />\n            </button>\n            <button type=\"button\" className=\"ql-redo\">\n              <Iconify icon={'ic:round-redo'} width={18} height={18} />\n            </button>\n          </div>\n        )}\n      </div>\n    </EditorToolbarStyle>\n  );\n}\n","import { ReactNode } from 'react';\nimport ReactQuill, { ReactQuillProps } from 'react-quill';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, BoxProps } from '@mui/material';\n//\nimport EditorToolbar, { formats, redoChange, undoChange } from './EditorToolbar';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Box)(({ theme }) => ({\n  borderRadius: theme.shape.borderRadius,\n  border: `solid 1px ${theme.palette.grey[500_32]}`,\n  '& .ql-container.ql-snow': {\n    borderColor: 'transparent',\n    ...theme.typography.body1,\n    fontFamily: theme.typography.fontFamily,\n  },\n  '& .ql-editor': {\n    minHeight: 200,\n    maxHeight: 640,\n    '&.ql-blank::before': {\n      fontStyle: 'normal',\n      color: theme.palette.text.disabled,\n    },\n    '& pre.ql-syntax': {\n      ...theme.typography.body2,\n      padding: theme.spacing(2),\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: theme.palette.grey[900],\n    },\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport interface Props extends ReactQuillProps {\n  id?: string;\n  error?: boolean;\n  simple?: boolean;\n  helperText?: ReactNode;\n  sx?: BoxProps;\n}\n\nexport default function Editor({\n  id = 'minimal-quill',\n  error,\n  value,\n  onChange,\n  simple = false,\n  helperText,\n  sx,\n  ...other\n}: Props) {\n  const modules = {\n    toolbar: {\n      container: `#${id}`,\n      handlers: {\n        undo: undoChange,\n        redo: redoChange,\n      },\n    },\n    history: {\n      delay: 500,\n      maxStack: 100,\n      userOnly: true,\n    },\n    syntax: true,\n    clipboard: {\n      matchVisual: false,\n    },\n  };\n\n  return (\n    <div>\n      <RootStyle\n        sx={{\n          ...(error && {\n            border: (theme) => `solid 1px ${theme.palette.error.main}`,\n          }),\n          ...sx,\n        }}\n      >\n        <EditorToolbar id={id} isSimple={simple} />\n        <ReactQuill\n          value={value}\n          onChange={onChange}\n          modules={modules}\n          formats={formats}\n          placeholder=\"Write something awesome...\"\n          {...other}\n        />\n      </RootStyle>\n\n      {helperText && helperText}\n    </div>\n  );\n}\n","// form\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { TextField, TextFieldProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ntype IProps = {\n  name: string;\n};\n\ntype Props = IProps & TextFieldProps;\n\nexport default function RHFTextField({ name, ...other }: Props) {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <TextField {...field} fullWidth error={!!error} helperText={error?.message} {...other} />\n      )}\n    />\n  );\n}\n"],"names":["forwardRef","ref","children","title","meta","other","styled","theme","width","height","margin","borderRadius","padding","spacing","border","palette","grey","zIndex","outline","display","overflow","position","alignItems","justifyContent","cursor","flexDirection","color","text","secondary","backgroundColor","background","neutral","transition","transitions","create","easing","easeInOut","duration","shorter","opacity","shape","FormProvider","onSubmit","methods","RHFSwitch","name","control","useFormContext","render","field","Switch","checked","value","isRTL","direction","fill","primary","main","stroke","borderBottom","marginRight","typography","subtitle2","right","left","disabled","borderColor","action","focus","marginTop","maxHeight","boxShadow","customShadows","z20","paper","FONT_FAMILY","FONT_SIZE","Size","Quill","whitelist","Font","Box","body1","fontFamily","minHeight","fontStyle","body2","RHFTextField","fieldState","error","fullWidth","helperText","message"],"sourceRoot":""}