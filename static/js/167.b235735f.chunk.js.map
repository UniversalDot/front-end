{"version":3,"file":"static/js/167.b235735f.chunk.js","mappings":"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","sources":["components/universaldot/Profile/ProfileAbout.tsx","components/universaldot/Profile/ProfileSocialInfo.tsx","components/universaldot/Profile/Widget.tsx","components/universaldot/Profile/Profile.tsx","components/universaldot/Profile/ProfileCover.tsx","components/universaldot/Profile/Configuration.tsx","pages/Profile.tsx"],"sourcesContent":["// @mui\nimport { styled } from '@mui/material/styles';\nimport { Link, Card, Typography, CardHeader, Stack } from '@mui/material';\n// @types\nimport { MyProfile } from '../../../types';\n// components\nimport Iconify from '../../Iconify';\n\n// ----------------------------------------------------------------------\n\nconst IconStyle = styled(Iconify)(({ theme }) => ({\n  width: 20,\n  height: 20,\n  marginTop: 1,\n  flexShrink: 0,\n  marginRight: theme.spacing(2),\n}));\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  profile: MyProfile;\n};\n\nexport default function ProfileAbout({ profile }: Props) {\n  const { quote, country, email, role, company, school } = profile;\n\n  return (\n    <Card>\n      <CardHeader title=\"About\" />\n\n      <Stack spacing={2} sx={{ p: 3 }}>\n        <Typography variant=\"body2\">{quote}</Typography>\n\n        <Stack direction=\"row\">\n          <IconStyle icon={'eva:pin-fill'} />\n          <Typography variant=\"body2\">\n            From &nbsp;\n            <Link component=\"span\" variant=\"subtitle2\" color=\"text.primary\">\n              {country}\n            </Link>\n          </Typography>\n        </Stack>\n\n        <Stack direction=\"row\">\n          <IconStyle icon={'eva:email-fill'} />\n          <Typography variant=\"body2\">{email}</Typography>\n        </Stack>\n\n        <Stack direction=\"row\">\n          <IconStyle icon={'ic:round-business-center'} />\n          <Typography variant=\"body2\">\n            {role} at &nbsp;\n            <Link component=\"span\" variant=\"subtitle2\" color=\"text.primary\">\n              {company}\n            </Link>\n          </Typography>\n        </Stack>\n\n        <Stack direction=\"row\">\n          <IconStyle icon={'ic:round-business-center'} />\n          <Typography variant=\"body2\">\n            Studied at &nbsp;\n            <Link component=\"span\" variant=\"subtitle2\" color=\"text.primary\">\n              {school}\n            </Link>\n          </Typography>\n        </Stack>\n      </Stack>\n    </Card>\n  );\n}\n","// @mui\nimport { styled } from '@mui/material/styles';\nimport { Link, Card, CardHeader, Stack } from '@mui/material'; // @types\n// @types\nimport { MyProfile } from '../../../types';\n// components\nimport Iconify from '../../Iconify';\n\n// ----------------------------------------------------------------------\n\nconst IconStyle = styled(Iconify)(({ theme }) => ({\n  width: 20,\n  height: 20,\n  marginTop: 1,\n  flexShrink: 0,\n  marginRight: theme.spacing(2),\n}));\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  profile: MyProfile;\n};\n\nexport default function ProfileSocialInfo({ profile }: Props) {\n  const { facebookLink, instagramLink, linkedinLink, twitterLink } = profile;\n\n  const SOCIALS = [\n    {\n      name: 'Linkedin',\n      icon: <IconStyle icon={'eva:linkedin-fill'} color=\"#006097\" />,\n      href: linkedinLink,\n    },\n    {\n      name: 'Twitter',\n      icon: <IconStyle icon={'eva:twitter-fill'} color=\"#1C9CEA\" />,\n      href: twitterLink,\n    },\n    {\n      name: 'Instagram',\n      icon: <IconStyle icon={'ant-design:instagram-filled'} color=\"#D7336D\" />,\n      href: instagramLink,\n    },\n    {\n      name: 'Facebook',\n      icon: <IconStyle icon={'eva:facebook-fill'} color=\"#1877F2\" />,\n      href: facebookLink,\n    },\n  ];\n\n  return (\n    <Card>\n      <CardHeader title=\"Social\" />\n      <Stack spacing={2} sx={{ p: 3 }}>\n        {SOCIALS.map((link) => (\n          <Stack key={link.name} direction=\"row\" alignItems=\"center\">\n            {link.icon}\n            <Link component=\"span\" variant=\"body2\" color=\"text.primary\" noWrap>\n              {link.href}\n            </Link>\n          </Stack>\n        ))}\n      </Stack>\n    </Card>\n  );\n}\n","import { ReactElement } from 'react';\n// @mui\nimport { Card, Typography, Box, CardProps } from '@mui/material';\n// ----------------------------------------------------------------------\n\ninterface Props extends CardProps {\n  title: string;\n  total: string;\n  icon: ReactElement;\n}\n\nexport default function Widget({ title, total, icon, sx, ...other }: Props) {\n  return (\n    <Card\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        p: 2,\n        pl: 3,\n        ...sx,\n      }}\n      {...other}\n    >\n      <div>\n        <Typography variant=\"h4\">{total}</Typography>\n\n        <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n          {title}\n        </Typography>\n      </div>\n\n      <Box\n        sx={{\n          width: 120,\n          height: 120,\n          lineHeight: 0,\n          borderRadius: '50%',\n          bgcolor: 'background.neutral',\n        }}\n      >\n        {icon}\n      </Box>\n    </Card>\n  );\n}\n","// @mui\nimport { Grid, Stack } from '@mui/material';\n// @types\nimport { MyProfile } from '../../../types';\n// universaldot\nimport ProfileAbout from './ProfileAbout';\nimport ProfileSocialInfo from './ProfileSocialInfo';\nimport { useProfile } from '../../../hooks/universaldot';\nimport Widget from 'src/components/universaldot/Profile/Widget';\n// ----------------------------------------------------------------------\n\ntype Props = {\n  myProfile: MyProfile;\n};\n\nexport default function Profile({ myProfile }: Props) {\n  const { profileData } = useProfile();\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={4}>\n        <Stack spacing={3}>\n          <ProfileAbout profile={myProfile} />\n          <ProfileSocialInfo profile={myProfile} />\n        </Stack>\n      </Grid>\n\n      <Grid item xs={12} md={8}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6}>\n            <Widget\n              title=\"Reputation points\"\n              total={profileData?.reputation || 'N/A'}\n              icon={<div />}\n            />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Widget\n              title=\"Cryptocurrency\"\n              total={`₿${profileData?.balance || 'N/A'}`}\n              icon={<div />}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","// @mui\nimport { styled } from '@mui/material/styles';\nimport { Box, Typography } from '@mui/material';\n// @types\nimport { MyProfile } from '../../../types';\n// utils\nimport cssStyles from '../../../utils/cssStyles';\n// components\nimport MyAvatar from '../../MyAvatar';\nimport Image from '../../Image';\n// universaldot\nimport { useProfile } from '../../../hooks/universaldot';\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  '&:before': {\n    ...cssStyles().bgBlur({ blur: 2, color: theme.palette.primary.darker }),\n    top: 0,\n    zIndex: 9,\n    content: \"''\",\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n  },\n}));\n\nconst InfoStyle = styled('div')(({ theme }) => ({\n  left: 0,\n  right: 0,\n  zIndex: 99,\n  position: 'absolute',\n  marginTop: theme.spacing(5),\n  [theme.breakpoints.up('md')]: {\n    right: 'auto',\n    display: 'flex',\n    alignItems: 'center',\n    left: theme.spacing(3),\n    bottom: theme.spacing(3),\n  },\n}));\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  myProfile: MyProfile;\n};\n\nexport default function ProfileCover({ myProfile }: Props) {\n  const { profileData } = useProfile();\n\n  const { position, cover } = myProfile;\n\n  return (\n    <RootStyle>\n      <InfoStyle>\n        <MyAvatar\n          sx={{\n            mx: 'auto',\n            borderWidth: 2,\n            borderStyle: 'solid',\n            borderColor: 'common.white',\n            width: { xs: 80, md: 128 },\n            height: { xs: 80, md: 128 },\n          }}\n        />\n        <Box\n          sx={{\n            ml: { md: 3 },\n            mt: { xs: 1, md: 0 },\n            color: 'common.white',\n            textAlign: { xs: 'center', md: 'left' },\n          }}\n        >\n          <Typography variant=\"h4\">{profileData?.name || 'N/A'}</Typography>\n          <Typography sx={{ opacity: 0.72 }}>{position}</Typography>\n        </Box>\n      </InfoStyle>\n      <Image\n        alt=\"profile cover\"\n        src={cover}\n        sx={{ position: 'absolute', top: 0, left: 0, right: 0, bottom: 0 }}\n      />\n    </RootStyle>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\n// @mui\nimport {\n  Box,\n  Card,\n  Grid,\n  Stack,\n  Typography,\n  Chip,\n  Paper,\n  CardActions,\n  InputAdornment,\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  Tooltip,\n  IconButton,\n  Button,\n  LinearProgress,\n} from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { LoadingButton } from '@mui/lab';\nimport Iconify from '../../Iconify';\n// universaldot\nimport { useProfile, useLoader } from '../../../hooks/universaldot';\nimport { ProfileCallables } from '../../../types';\nimport difference from 'lodash/difference';\nimport { useSnackbar } from 'notistack';\n\n// ----------------------------------------------------------------------\n\nexport default function ConfigurationProfile() {\n  const theme = useTheme();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [interest, setInterest] = useState('');\n  const [usernameEditEnabled, setUsernameEditEnabled] = useState(false);\n\n  const [localUsername, setLocalUsername] = useState('');\n  const [localAvailableHours, setLocalAvailableHours] = useState<string>('');\n  const [localOtherInformation, setLocalOtherInformation] = useState<string>('');\n  const [localInterests, setLocalInterests] = useState<string[]>([]);\n\n  const { profileData, profileAction } = useProfile();\n  const { loadingProfile } = useLoader();\n\n  const differencesExist: boolean = useMemo(() => {\n    if (\n      profileData &&\n      profileData.name &&\n      profileData.interests &&\n      profileData.availableHoursPerWeek &&\n      profileData.additionalInformation\n    ) {\n      const interestsDifferences = difference(localInterests, profileData?.interests);\n      if (\n        localUsername !== profileData?.name ||\n        interestsDifferences.length > 0 ||\n        localInterests.length !== profileData?.interests.length ||\n        localAvailableHours !== profileData?.availableHoursPerWeek ||\n        localOtherInformation !== profileData?.additionalInformation\n      ) {\n        return true;\n      } else return false;\n    } else {\n      return false;\n    }\n  }, [profileData, localUsername, localInterests, localAvailableHours, localOtherInformation]);\n\n  const onUsernameChange = (username: string) => {\n    setLocalUsername(username);\n  };\n\n  const onAvailableHoursChange = (hours: string) => {\n    const ok = new RegExp(/^[1-9]\\d*$/g);\n    if (ok.test(hours)) {\n      setLocalAvailableHours(hours);\n    }\n  };\n\n  const onAvailableHoursBackspace = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.code === 'Backspace' && localAvailableHours.length === 1) {\n      setLocalAvailableHours('');\n    }\n  };\n\n  const onOtherInformationChange = (text: string) => {\n    setLocalOtherInformation(text);\n  };\n\n  useEffect(() => {\n    if (profileData?.name || profileData?.name === '') {\n      setLocalUsername(profileData.name);\n    }\n    if (profileData?.interests) {\n      setLocalInterests(profileData.interests);\n    }\n    if (profileData?.availableHoursPerWeek) {\n      setLocalAvailableHours(profileData.availableHoursPerWeek);\n    }\n    if (profileData?.additionalInformation) {\n      setLocalOtherInformation(profileData.additionalInformation);\n    }\n\n    if (!profileData) {\n      resetLocalState();\n    }\n  }, [profileData]);\n\n  const handleAddInterest = () => {\n    if (interest.length > 3) {\n      setLocalInterests([...localInterests, interest]);\n      setInterest('');\n    }\n  };\n\n  const onEnter = (e: any) => {\n    if (e.keyCode === 13 && interest.length > 3) {\n      setLocalInterests([...localInterests, interest]);\n      setInterest('');\n    }\n  };\n\n  const onRemoveInterest = (interest: any) => {\n    setLocalInterests(localInterests.filter((interestItem: any) => interestItem !== interest));\n  };\n\n  const resetLocalState = () => {\n    setInterest('');\n    setLocalUsername('');\n    setLocalAvailableHours('');\n    setLocalOtherInformation('');\n    setLocalInterests([]);\n  };\n\n  const onActionButtonClick = (actionType: ProfileCallables) => {\n    if (\n      actionType === ProfileCallables.CREATE_PROFILE ||\n      actionType === ProfileCallables.UPDATE_PROFILE\n    ) {\n      profileAction(\n        actionType,\n        {\n          username: localUsername,\n          interests: localInterests,\n          availableHoursPerWeek: localAvailableHours,\n          otherInformation: localOtherInformation,\n        },\n        enqueueSnackbar\n      );\n      resetLocalState();\n    }\n\n    if (actionType === ProfileCallables.REMOVE_PROFILE) {\n      profileAction(\n        actionType,\n        {\n          username: localUsername,\n          interests: localInterests,\n          availableHoursPerWeek: localAvailableHours,\n          otherInformation: localOtherInformation,\n        },\n        enqueueSnackbar\n      );\n    }\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={12}>\n        <Card sx={{ p: 3 }}>\n          {loadingProfile && (\n            <Stack sx={{ width: '100%', color: 'grey.500' }} spacing={2}>\n              <LinearProgress />\n            </Stack>\n          )}\n          {!loadingProfile && (\n            <Box>\n              <Box>\n                {profileData ? (\n                  <Typography variant=\"h4\" gutterBottom>\n                    Your profile\n                  </Typography>\n                ) : (\n                  <Typography variant=\"h4\" gutterBottom>\n                    Create your profile\n                  </Typography>\n                )}\n              </Box>\n              <Box>\n                {profileData ? (\n                  <Typography paragraph gutterBottom>\n                    You can update or remove your profile in this panel\n                  </Typography>\n                ) : (\n                  <Typography paragraph gutterBottom>\n                    To create your profile add your username and some interests\n                  </Typography>\n                )}\n              </Box>\n            </Box>\n          )}\n\n          {!loadingProfile && (\n            <Box\n              sx={{\n                display: 'grid',\n                columnGap: 2,\n                rowGap: 3,\n                gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(2, 1fr)' },\n              }}\n            >\n              <Box>\n                <Typography\n                  paragraph\n                  variant=\"overline\"\n                  sx={{ color: 'text.disabled' }}\n                  gutterBottom\n                >\n                  Details\n                </Typography>\n                <Box\n                  sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                  }}\n                >\n                  <Box\n                    sx={{\n                      flex: 1,\n                      display: 'grid',\n                      columnGap: 2,\n                      rowGap: 3,\n                      gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(1, 1fr)' },\n                    }}\n                  >\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      <FormControl variant=\"outlined\" sx={{ flex: 1 }}>\n                        <InputLabel htmlFor=\"outlined-adornment-username\">Username</InputLabel>\n                        <OutlinedInput\n                          id=\"outlined-adornment-username\"\n                          type={'text'}\n                          value={localUsername}\n                          onChange={(event) => onUsernameChange(event.target.value)}\n                          // endAdornment={\n                          //   profileData ? (\n                          //     <Tooltip title=\"Edit username\" placement=\"top\">\n                          //       <InputAdornment\n                          //         position=\"end\"\n                          //         sx={{ cursor: 'pointer', color: '#637381' }}\n                          //       >\n                          //         <Iconify\n                          //           icon=\"akar-icons:edit\"\n                          //           width={20}\n                          //           height={20}\n                          //           onClick={() => setUsernameEditEnabled(true)}\n                          //         />\n                          //       </InputAdornment>\n                          //     </Tooltip>\n                          //   ) : (\n                          //     <></>\n                          //   )\n                          // }\n                          label=\"Username\"\n                          onBlur={() => setUsernameEditEnabled(false)}\n                          readOnly={!usernameEditEnabled && Boolean(profileData)}\n                        />\n                      </FormControl>\n                      {profileData && (\n                        <Box>\n                          <Tooltip title=\"Enable editing\" placement=\"top\">\n                            <IconButton\n                              color=\"primary\"\n                              aria-label=\"upload picture\"\n                              component=\"span\"\n                              onClick={() => setUsernameEditEnabled(true)}\n                              sx={{ marginLeft: theme.spacing(1) }}\n                              disabled={usernameEditEnabled}\n                            >\n                              <Iconify icon=\"akar-icons:edit\" width={20} height={20} />\n                            </IconButton>\n                          </Tooltip>\n                        </Box>\n                      )}\n                    </Box>\n                    <FormControl variant=\"outlined\">\n                      <InputLabel htmlFor=\"outlined-available-hours\">\n                        Available hours per week\n                      </InputLabel>\n                      <OutlinedInput\n                        id=\"outlined-available-hours\"\n                        type={'text'}\n                        value={localAvailableHours}\n                        onChange={(event) => onAvailableHoursChange(event.target.value)}\n                        onKeyDown={onAvailableHoursBackspace}\n                        label=\"Available hours per week\"\n                      />\n                    </FormControl>\n                    <FormControl variant=\"outlined\">\n                      <InputLabel htmlFor=\"outlined-other-info\">Other information</InputLabel>\n                      <OutlinedInput\n                        id=\"outlined-other-info\"\n                        type={'text'}\n                        value={localOtherInformation}\n                        onChange={(event) => onOtherInformationChange(event.target.value)}\n                        label=\"Other information\"\n                      />\n                    </FormControl>\n                  </Box>\n                </Box>\n              </Box>\n\n              <Box>\n                <Typography\n                  paragraph\n                  variant=\"overline\"\n                  sx={{ color: 'text.disabled' }}\n                  gutterBottom\n                >\n                  Interests\n                </Typography>\n                <Box\n                  sx={{\n                    display: 'grid',\n                    columnGap: 2,\n                    rowGap: 3,\n                    gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(1, 1fr)' },\n                  }}\n                >\n                  <FormControl variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-interest\">Add interest</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-interest\"\n                      type={'text'}\n                      value={interest}\n                      onChange={(event) => setInterest(event.target.value)}\n                      endAdornment={\n                        <InputAdornment position=\"end\" sx={{ cursor: 'pointer' }}>\n                          <Iconify\n                            icon=\"ant-design:plus-outlined\"\n                            width={20}\n                            height={20}\n                            onClick={() => handleAddInterest()}\n                          />\n                        </InputAdornment>\n                      }\n                      label=\"Username\"\n                      onKeyDown={onEnter}\n                    />\n                  </FormControl>\n                  <Paper sx={{ p: 2 }} variant=\"outlined\">\n                    <Stack direction=\"row\" flexWrap=\"wrap\" sx={{ p: 0.75 }}>\n                      {localInterests.map((interest: string, i: number) => (\n                        <Chip\n                          key={`${interest}-${i}`}\n                          label={interest}\n                          size=\"small\"\n                          sx={{ m: 0.5 }}\n                          variant=\"outlined\"\n                          onDelete={() => onRemoveInterest(interest)}\n                        />\n                      ))}\n                    </Stack>\n                    {localInterests.length === 0 && (\n                      <Typography paragraph>Added interests will show up here...</Typography>\n                    )}\n                  </Paper>\n                </Box>\n              </Box>\n            </Box>\n          )}\n\n          <CardActions sx={{ padding: '24px 0 0 0' }}>\n            <LoadingButton\n              variant=\"contained\"\n              loading={loadingProfile}\n              disabled={\n                (profileData && !differencesExist) ||\n                (!profileData && localInterests.length === 0) ||\n                !localUsername\n              }\n              onClick={() =>\n                onActionButtonClick(\n                  profileData ? ProfileCallables.UPDATE_PROFILE : ProfileCallables.CREATE_PROFILE\n                )\n              }\n            >\n              {profileData ? 'Save changes' : 'Create profile'}\n            </LoadingButton>\n            {profileData && (\n              <Button\n                variant=\"contained\"\n                color=\"error\"\n                onClick={() => onActionButtonClick(ProfileCallables.REMOVE_PROFILE)}\n                disabled={loadingProfile}\n              >\n                Delete profile\n              </Button>\n            )}\n          </CardActions>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\n","import { capitalCase } from 'change-case';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport { Tab, Box, Card, Tabs, Container } from '@mui/material';\n// @types\nimport { MyProfile } from '../types';\n// routes\nimport { PATH_UNIVERSALDOT } from '../routes/paths';\n// hooks\nimport useTabs from '../hooks/useTabs';\nimport useSettings from '../hooks/useSettings';\n// _mock_\nimport _mock from '../_mock';\n// components\nimport Page from '../components/Page';\nimport Iconify from '../components/Iconify';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\n// sections\nimport {\n  Profile as ProfileView,\n  ProfileCover,\n  Configuration,\n} from '../components/universaldot/Profile';\n// universaldot\nimport { useProfile } from '../hooks/universaldot';\n\n// ----------------------------------------------------------------------\n\nconst TabsWrapperStyle = styled('div')(({ theme }) => ({\n  zIndex: 9,\n  bottom: 0,\n  width: '100%',\n  display: 'flex',\n  position: 'absolute',\n  backgroundColor: theme.palette.background.paper,\n  [theme.breakpoints.up('sm')]: {\n    justifyContent: 'center',\n  },\n  [theme.breakpoints.up('md')]: {\n    justifyContent: 'flex-end',\n    paddingRight: theme.spacing(3),\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function Profile() {\n  const { themeStretch } = useSettings();\n\n  const { currentTab, onChangeTab } = useTabs('profile');\n\n  const { profileData } = useProfile();\n\n  // @TODO\n  const myProfile: MyProfile = {\n    id: _mock.id(1),\n    cover: _mock.image.cover(1),\n    position: 'UI/UX Designer at DesignerHub',\n    quote:\n      'Tart I love sugar plum I love oat cake. Sweet roll caramels I love jujubes. Topping cake wafer..',\n    country: _mock.address.country(1),\n    email: _mock.email(1),\n    company: _mock.company(1),\n    school: _mock.company(2),\n    role: 'UI/UX Designer',\n    facebookLink: `https://www.facebook.com/caitlyn.kerluke`,\n    instagramLink: `https://www.instagram.com/caitlyn.kerluke`,\n    linkedinLink: `https://www.linkedin.com/in/caitlyn.kerluke`,\n    twitterLink: `https://www.twitter.com/caitlyn.kerluke`,\n  };\n\n  const PROFILE_TABS = [\n    {\n      value: 'profile',\n      icon: <Iconify icon={'ic:round-account-box'} width={20} height={20} />,\n      component: <ProfileView myProfile={myProfile} />,\n    },\n    {\n      value: 'configuration',\n      icon: <Iconify icon={'eva:heart-fill'} width={20} height={20} />,\n      component: <Configuration />,\n    },\n  ];\n\n  return (\n    <Page title=\"Profile\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Profile\"\n          links={[\n            { name: 'Profile', href: PATH_UNIVERSALDOT.profile.root },\n            { name: profileData?.name || 'N/A' },\n          ]}\n        />\n        <Card\n          sx={{\n            mb: 3,\n            height: 280,\n            position: 'relative',\n          }}\n        >\n          <ProfileCover myProfile={myProfile} />\n\n          <TabsWrapperStyle>\n            <Tabs\n              allowScrollButtonsMobile\n              variant=\"scrollable\"\n              scrollButtons=\"auto\"\n              value={currentTab}\n              onChange={onChangeTab}\n            >\n              {PROFILE_TABS.map((tab) => (\n                <Tab\n                  disableRipple\n                  key={tab.value}\n                  value={tab.value}\n                  icon={tab.icon}\n                  label={capitalCase(tab.value)}\n                />\n              ))}\n            </Tabs>\n          </TabsWrapperStyle>\n        </Card>\n\n        {PROFILE_TABS.map((tab) => {\n          const isMatched = tab.value === currentTab;\n          return isMatched && <Box key={tab.value}>{tab.component}</Box>;\n        })}\n      </Container>\n    </Page>\n  );\n}\n"],"names":["IconStyle","styled","Iconify","theme","width","height","marginTop","flexShrink","marginRight","spacing","ProfileAbout","profile","quote","country","email","role","company","school","Card","CardHeader","title","Stack","sx","p","Typography","variant","direction","icon","Link","component","color","ProfileSocialInfo","facebookLink","instagramLink","linkedinLink","twitterLink","SOCIALS","name","href","map","link","alignItems","noWrap","Widget","total","other","display","justifyContent","pl","Box","lineHeight","borderRadius","bgcolor","Profile","myProfile","profileData","useProfile","Grid","container","item","xs","md","reputation","balance","RootStyle","cssStyles","bgBlur","blur","palette","primary","darker","top","zIndex","content","position","InfoStyle","left","right","breakpoints","up","bottom","ProfileCover","cover","MyAvatar","mx","borderWidth","borderStyle","borderColor","ml","mt","textAlign","opacity","Image","alt","src","ConfigurationProfile","useTheme","enqueueSnackbar","useSnackbar","interest","setInterest","useState","usernameEditEnabled","setUsernameEditEnabled","localUsername","setLocalUsername","localAvailableHours","setLocalAvailableHours","localOtherInformation","setLocalOtherInformation","localInterests","setLocalInterests","profileAction","loadingProfile","useLoader","differencesExist","useMemo","interests","availableHoursPerWeek","additionalInformation","interestsDifferences","difference","length","useEffect","resetLocalState","onActionButtonClick","actionType","ProfileCallables","username","otherInformation","LinearProgress","gutterBottom","paragraph","columnGap","rowGap","gridTemplateColumns","sm","flex","FormControl","InputLabel","htmlFor","OutlinedInput","id","type","value","onChange","event","onUsernameChange","target","label","onBlur","readOnly","Boolean","Tooltip","placement","IconButton","onClick","marginLeft","disabled","onAvailableHoursChange","hours","RegExp","test","onKeyDown","code","onOtherInformationChange","text","endAdornment","InputAdornment","cursor","e","keyCode","Paper","flexWrap","i","Chip","size","m","onDelete","filter","interestItem","onRemoveInterest","CardActions","padding","LoadingButton","loading","Button","TabsWrapperStyle","backgroundColor","background","paper","paddingRight","themeStretch","useSettings","currentTab","onChangeTab","useTabs","_mock","PROFILE_TABS","Page","Container","maxWidth","HeaderBreadcrumbs","heading","links","PATH_UNIVERSALDOT","mb","Tabs","allowScrollButtonsMobile","scrollButtons","tab","Tab","disableRipple","capitalCase"],"sourceRoot":""}